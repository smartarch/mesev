syntax = "proto3";
 
option java_multiple_files=true;
option java_package="explainabilityService";

service Explanations {
    rpc GetExplanation (ExplanationsRequest) returns (ExplanationsResponse);
    rpc ApplyAffectedActions (ApplyAffectedActionsRequest) returns (ApplyAffectedActionsResponse);
    rpc GetFeatureImportance (FeatureImportanceRequest) returns (FeatureImportanceResponse); 
}

//------------------ Pipeline - Model Explainability --------------------------------------------------

message HyperparameterList {
    string values = 1; // Possible values for the hyperparameter
    string type = 2; // Type of the hyperparameter: "categorical", "numeric", etc.
}

message Hyperparameters {
    map<string, HyperparameterList> hyperparameter = 1; // Map of hyperparameter name to details
    float metric_value = 2;
}

message DataPaths {
    string X_train = 1;
    string X_test = 2;
    string Y_train = 3;
    string Y_test = 4;
    string Y_pred = 5;
}

message ExplanationsRequest {

    string explanation_type = 1;
    string explanation_method = 2;

    repeated string model = 3; //different paths for the selected workflows
    DataPaths data = 4; //path to dataset file, contains whole dataset 
    string target_column = 5; // target variable of dataset
    map<string, Hyperparameters> hyper_configs = 6; // dictionaire with hyperparameters configs and respected metrics
    string feature1 = 7;
    string feature2 = 8;

    // -----Local/Global Counterfactual Explanation Fields -----
    string query = 9;

    // same as Model explainability plus target target label 
    int32 gcf_size = 10;  // Global Counterfactual (GCF) size
    string cf_generator = 11;  // Counterfactual generator method
    string cluster_action_choice_algo = 12;  // Algorithm for choosing clusters' actions

}


 message Features {
    string feature1 = 1;
    string feature2 = 2;
}

message Axis {
    string axis_name = 1;
    repeated string axis_values= 2;
    string axis_type = 3;
}

message TableContents {
    int32 index=1;
    repeated string values = 2;
    repeated string colour = 3;
}

message EffCost {
   double eff = 1;
   double cost = 2;
}

message ExplanationsResponse {
    string explainability_type = 1;
    string explanation_method = 2;
    string explainability_model = 3;
    string plot_name = 4;
    string plot_descr = 5;
    string plot_type = 6;
    Features features = 7;
    repeated string hyperparameter_list = 8;
    repeated string feature_list = 9;
    Axis xAxis = 10;
    Axis yAxis = 11;
    Axis zAxis = 12; 
    map<string, TableContents> table_contents= 13;
    map<string, TableContents> affected_clusters = 14; 
    map<string, EffCost> eff_cost_actions = 15; 
    float TotalEffectiveness = 16;
    float TotalCost = 17;
    map<string, TableContents> actions = 18;
}

//------------------ Apply Affected Actions --------------------------------------------------


message ApplyAffectedActionsRequest {
}

message ApplyAffectedActionsResponse {
    map<string, TableContents> applied_affected_actions = 1;
}

//------------------ Get Feature Importance --------------------------------------------------


message FeatureImportance {
    string feature_name = 1;      // Name of the feature
    double importance_score = 2; // Importance score of the feature
}

message FeatureImportanceRequest {
    string data = 1; // Path to dataset file
    string target_column = 2; // The target variable in the dataset
    repeated int32 test_index = 3;
    repeated string model = 4; // path to model file
}

message FeatureImportanceResponse {
    repeated FeatureImportance feature_importances = 1; // List of top 5 important features
}

