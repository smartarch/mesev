/**
 * generated by Xtext 2.39.0-SNAPSHOT
 */
package cz.smartarch.yamas.dsl.xDSL.impl;

import cz.smartarch.yamas.dsl.xDSL.NodeLink;
import cz.smartarch.yamas.dsl.xDSL.RegularLink;
import cz.smartarch.yamas.dsl.xDSL.XDSLPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Regular Link</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link cz.smartarch.yamas.dsl.xDSL.impl.RegularLinkImpl#getInput <em>Input</em>}</li>
 *   <li>{@link cz.smartarch.yamas.dsl.xDSL.impl.RegularLinkImpl#getOuput <em>Ouput</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RegularLinkImpl extends MinimalEObjectImpl.Container implements RegularLink
{
  /**
   * The cached value of the '{@link #getInput() <em>Input</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInput()
   * @generated
   * @ordered
   */
  protected NodeLink input;

  /**
   * The cached value of the '{@link #getOuput() <em>Ouput</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOuput()
   * @generated
   * @ordered
   */
  protected NodeLink ouput;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RegularLinkImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XDSLPackage.Literals.REGULAR_LINK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NodeLink getInput()
  {
    return input;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInput(NodeLink newInput, NotificationChain msgs)
  {
    NodeLink oldInput = input;
    input = newInput;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XDSLPackage.REGULAR_LINK__INPUT, oldInput, newInput);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInput(NodeLink newInput)
  {
    if (newInput != input)
    {
      NotificationChain msgs = null;
      if (input != null)
        msgs = ((InternalEObject)input).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XDSLPackage.REGULAR_LINK__INPUT, null, msgs);
      if (newInput != null)
        msgs = ((InternalEObject)newInput).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XDSLPackage.REGULAR_LINK__INPUT, null, msgs);
      msgs = basicSetInput(newInput, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XDSLPackage.REGULAR_LINK__INPUT, newInput, newInput));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NodeLink getOuput()
  {
    return ouput;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOuput(NodeLink newOuput, NotificationChain msgs)
  {
    NodeLink oldOuput = ouput;
    ouput = newOuput;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XDSLPackage.REGULAR_LINK__OUPUT, oldOuput, newOuput);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOuput(NodeLink newOuput)
  {
    if (newOuput != ouput)
    {
      NotificationChain msgs = null;
      if (ouput != null)
        msgs = ((InternalEObject)ouput).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XDSLPackage.REGULAR_LINK__OUPUT, null, msgs);
      if (newOuput != null)
        msgs = ((InternalEObject)newOuput).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XDSLPackage.REGULAR_LINK__OUPUT, null, msgs);
      msgs = basicSetOuput(newOuput, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XDSLPackage.REGULAR_LINK__OUPUT, newOuput, newOuput));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case XDSLPackage.REGULAR_LINK__INPUT:
        return basicSetInput(null, msgs);
      case XDSLPackage.REGULAR_LINK__OUPUT:
        return basicSetOuput(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XDSLPackage.REGULAR_LINK__INPUT:
        return getInput();
      case XDSLPackage.REGULAR_LINK__OUPUT:
        return getOuput();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XDSLPackage.REGULAR_LINK__INPUT:
        setInput((NodeLink)newValue);
        return;
      case XDSLPackage.REGULAR_LINK__OUPUT:
        setOuput((NodeLink)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XDSLPackage.REGULAR_LINK__INPUT:
        setInput((NodeLink)null);
        return;
      case XDSLPackage.REGULAR_LINK__OUPUT:
        setOuput((NodeLink)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XDSLPackage.REGULAR_LINK__INPUT:
        return input != null;
      case XDSLPackage.REGULAR_LINK__OUPUT:
        return ouput != null;
    }
    return super.eIsSet(featureID);
  }

} //RegularLinkImpl
