/*
 * generated by Xtext 2.39.0-SNAPSHOT
 */
package cz.smartarch.yamas.dsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import cz.smartarch.yamas.dsl.ide.contentassist.antlr.internal.InternalXDSLParser;
import cz.smartarch.yamas.dsl.services.XDSLGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class XDSLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(XDSLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, XDSLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getRootAccess().getAlternatives_1(), "rule__Root__Alternatives_1");
			builder.put(grammarAccess.getWorkflowAccess().getAlternatives(), "rule__Workflow__Alternatives");
			builder.put(grammarAccess.getDataAccess().getAlternatives(), "rule__Data__Alternatives");
			builder.put(grammarAccess.getCompositeWorkflowAccess().getAlternatives_3(), "rule__CompositeWorkflow__Alternatives_3");
			builder.put(grammarAccess.getNodeAccess().getAlternatives(), "rule__Node__Alternatives");
			builder.put(grammarAccess.getTaskAccess().getAlternatives_2(), "rule__Task__Alternatives_2");
			builder.put(grammarAccess.getTaskAccess().getAlternatives_2_1_1(), "rule__Task__Alternatives_2_1_1");
			builder.put(grammarAccess.getOperatorAccess().getAlternatives(), "rule__Operator__Alternatives");
			builder.put(grammarAccess.getLinkAccess().getAlternatives(), "rule__Link__Alternatives");
			builder.put(grammarAccess.getNodeLinkAccess().getAlternatives(), "rule__NodeLink__Alternatives");
			builder.put(grammarAccess.getAssembledWorkflowAccess().getAlternatives_5(), "rule__AssembledWorkflow__Alternatives_5");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getAlternatives_3(), "rule__SubstitutedTask__Alternatives_3");
			builder.put(grammarAccess.getTaskSpecificationAccess().getAlternatives_3(), "rule__TaskSpecification__Alternatives_3");
			builder.put(grammarAccess.getParameterAccess().getAlternatives_3_1_1(), "rule__Parameter__Alternatives_3_1_1");
			builder.put(grammarAccess.getParameterAccess().getAlternatives_3_2_0(), "rule__Parameter__Alternatives_3_2_0");
			builder.put(grammarAccess.getParamAccess().getAlternatives_2_1(), "rule__Param__Alternatives_2_1");
			builder.put(grammarAccess.getParamValueAccess().getAlternatives(), "rule__ParamValue__Alternatives");
			builder.put(grammarAccess.getPrimitiveValueAccess().getAlternatives(), "rule__PrimitiveValue__Alternatives");
			builder.put(grammarAccess.getParameterTypeAccess().getAlternatives(), "rule__ParameterType__Alternatives");
			builder.put(grammarAccess.getPrimitiveTypeAccess().getAlternatives_1(), "rule__PrimitiveType__Alternatives_1");
			builder.put(grammarAccess.getExperimentAccess().getAlternatives_4(), "rule__Experiment__Alternatives_4");
			builder.put(grammarAccess.getControlAccess().getAlternatives_3(), "rule__Control__Alternatives_3");
			builder.put(grammarAccess.getExperimentStepAccess().getAlternatives(), "rule__ExperimentStep__Alternatives");
			builder.put(grammarAccess.getExperimentTaskAccess().getAlternatives(), "rule__ExperimentTask__Alternatives");
			builder.put(grammarAccess.getExperimentTaskAccess().getAlternatives_1_3(), "rule__ExperimentTask__Alternatives_1_3");
			builder.put(grammarAccess.getExperimentSpaceAccess().getAlternatives_5(), "rule__ExperimentSpace__Alternatives_5");
			builder.put(grammarAccess.getTaskConfigurationAccess().getAlternatives_2(), "rule__TaskConfiguration__Alternatives_2");
			builder.put(grammarAccess.getTaskConfigurationAccess().getAlternatives_2_0_1(), "rule__TaskConfiguration__Alternatives_2_0_1");
			builder.put(grammarAccess.getActionArgumentAccess().getAlternatives(), "rule__ActionArgument__Alternatives");
			builder.put(grammarAccess.getExperimentTaskConfiguraitonBodyAccess().getAlternatives_2(), "rule__ExperimentTaskConfiguraitonBody__Alternatives_2");
			builder.put(grammarAccess.getExperimentFlowAccess().getAlternatives(), "rule__ExperimentFlow__Alternatives");
			builder.put(grammarAccess.getExperimentNodeAccess().getAlternatives(), "rule__ExperimentNode__Alternatives");
			builder.put(grammarAccess.getRegularExpLinkAccess().getAlternatives_1(), "rule__RegularExpLink__Alternatives_1");
			builder.put(grammarAccess.getRegularExpLinkAccess().getAlternatives_2_1(), "rule__RegularExpLink__Alternatives_2_1");
			builder.put(grammarAccess.getEventValueAccess().getAlternatives(), "rule__EventValue__Alternatives");
			builder.put(grammarAccess.getMetricKindAccess().getAlternatives(), "rule__MetricKind__Alternatives");
			builder.put(grammarAccess.getRootAccess().getGroup(), "rule__Root__Group__0");
			builder.put(grammarAccess.getRootAccess().getGroup_0(), "rule__Root__Group_0__0");
			builder.put(grammarAccess.getInputDataAccess().getGroup(), "rule__InputData__Group__0");
			builder.put(grammarAccess.getOutputDataAccess().getGroup(), "rule__OutputData__Group__0");
			builder.put(grammarAccess.getDataConfigurationAccess().getGroup(), "rule__DataConfiguration__Group__0");
			builder.put(grammarAccess.getDataConfigurationAccess().getGroup_4_0(), "rule__DataConfiguration__Group_4_0__0");
			builder.put(grammarAccess.getDataConfigurationAccess().getGroup_4_1(), "rule__DataConfiguration__Group_4_1__0");
			builder.put(grammarAccess.getDataConfigurationAccess().getGroup_4_2(), "rule__DataConfiguration__Group_4_2__0");
			builder.put(grammarAccess.getDataLinkAccess().getGroup(), "rule__DataLink__Group__0");
			builder.put(grammarAccess.getDataLinkAccess().getGroup_0(), "rule__DataLink__Group_0__0");
			builder.put(grammarAccess.getDataLinkAccess().getGroup_0_0(), "rule__DataLink__Group_0_0__0");
			builder.put(grammarAccess.getDataLinkAccess().getGroup_2(), "rule__DataLink__Group_2__0");
			builder.put(grammarAccess.getDataLinkAccess().getGroup_2_0(), "rule__DataLink__Group_2_0__0");
			builder.put(grammarAccess.getCompositeWorkflowAccess().getGroup(), "rule__CompositeWorkflow__Group__0");
			builder.put(grammarAccess.getTaskAccess().getGroup(), "rule__Task__Group__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_2_1(), "rule__Task__Group_2_1__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_2_1_1_3(), "rule__Task__Group_2_1_1_3__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_2_1_1_3_3(), "rule__Task__Group_2_1_1_3_3__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_2_1_1_4(), "rule__Task__Group_2_1_1_4__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_2_1_1_5(), "rule__Task__Group_2_1_1_5__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_2_1_1_6(), "rule__Task__Group_2_1_1_6__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_2_1_1_7(), "rule__Task__Group_2_1_1_7__0");
			builder.put(grammarAccess.getMetaDataAccess().getGroup(), "rule__MetaData__Group__0");
			builder.put(grammarAccess.getExclusiveAccess().getGroup(), "rule__Exclusive__Group__0");
			builder.put(grammarAccess.getInclusiveAccess().getGroup(), "rule__Inclusive__Group__0");
			builder.put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
			builder.put(grammarAccess.getCaseAccess().getGroup(), "rule__Case__Group__0");
			builder.put(grammarAccess.getConditionalLinkAccess().getGroup(), "rule__ConditionalLink__Group__0");
			builder.put(grammarAccess.getRegularLinkAccess().getGroup(), "rule__RegularLink__Group__0");
			builder.put(grammarAccess.getRegularLinksAccess().getGroup(), "rule__RegularLinks__Group__0");
			builder.put(grammarAccess.getRegularLinksAccess().getGroup_1(), "rule__RegularLinks__Group_1__0");
			builder.put(grammarAccess.getExceptionalLinkAccess().getGroup(), "rule__ExceptionalLink__Group__0");
			builder.put(grammarAccess.getGroupAccess().getGroup(), "rule__Group__Group__0");
			builder.put(grammarAccess.getGroupAccess().getGroup_3(), "rule__Group__Group_3__0");
			builder.put(grammarAccess.getGroupAccess().getGroup_3_1(), "rule__Group__Group_3_1__0");
			builder.put(grammarAccess.getAssembledWorkflowAccess().getGroup(), "rule__AssembledWorkflow__Group__0");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getGroup(), "rule__SubstitutedTask__Group__0");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getGroup_3_3(), "rule__SubstitutedTask__Group_3_3__0");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getGroup_3_3_3(), "rule__SubstitutedTask__Group_3_3_3__0");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getGroup_3_4(), "rule__SubstitutedTask__Group_3_4__0");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getGroup_3_5(), "rule__SubstitutedTask__Group_3_5__0");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getGroup_3_6(), "rule__SubstitutedTask__Group_3_6__0");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getGroup_3_7(), "rule__SubstitutedTask__Group_3_7__0");
			builder.put(grammarAccess.getTaskSpecificationAccess().getGroup(), "rule__TaskSpecification__Group__0");
			builder.put(grammarAccess.getTaskSpecificationAccess().getGroup_3_4(), "rule__TaskSpecification__Group_3_4__0");
			builder.put(grammarAccess.getDependencyAccess().getGroup(), "rule__Dependency__Group__0");
			builder.put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
			builder.put(grammarAccess.getParameterAccess().getGroup_3_0(), "rule__Parameter__Group_3_0__0");
			builder.put(grammarAccess.getParameterAccess().getGroup_3_1(), "rule__Parameter__Group_3_1__0");
			builder.put(grammarAccess.getParameterAccess().getGroup_3_2(), "rule__Parameter__Group_3_2__0");
			builder.put(grammarAccess.getParameterAccess().getGroup_3_3(), "rule__Parameter__Group_3_3__0");
			builder.put(grammarAccess.getParamAccess().getGroup(), "rule__Param__Group__0");
			builder.put(grammarAccess.getParamAccess().getGroup_2(), "rule__Param__Group_2__0");
			builder.put(grammarAccess.getParamValueRangeAccess().getGroup(), "rule__ParamValueRange__Group__0");
			builder.put(grammarAccess.getParamValueRangeAccess().getGroup_5(), "rule__ParamValueRange__Group_5__0");
			builder.put(grammarAccess.getParamValueEnumAccess().getGroup(), "rule__ParamValueEnum__Group__0");
			builder.put(grammarAccess.getParamValueEnumAccess().getGroup_3(), "rule__ParamValueEnum__Group_3__0");
			builder.put(grammarAccess.getParamValueListAccess().getGroup(), "rule__ParamValueList__Group__0");
			builder.put(grammarAccess.getParamValueListAccess().getGroup_2(), "rule__ParamValueList__Group_2__0");
			builder.put(grammarAccess.getStructureAccess().getGroup(), "rule__Structure__Group__0");
			builder.put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
			builder.put(grammarAccess.getFieldAccess().getGroup_1(), "rule__Field__Group_1__0");
			builder.put(grammarAccess.getArrayAccess().getGroup(), "rule__Array__Group__0");
			builder.put(grammarAccess.getArrayAccess().getGroup_4(), "rule__Array__Group_4__0");
			builder.put(grammarAccess.getPrimitiveTypeAccess().getGroup(), "rule__PrimitiveType__Group__0");
			builder.put(grammarAccess.getMetricAccess().getGroup(), "rule__Metric__Group__0");
			builder.put(grammarAccess.getMetricAccess().getGroup_3_0(), "rule__Metric__Group_3_0__0");
			builder.put(grammarAccess.getMetricAccess().getGroup_3_1(), "rule__Metric__Group_3_1__0");
			builder.put(grammarAccess.getExperimentAccess().getGroup(), "rule__Experiment__Group__0");
			builder.put(grammarAccess.getExperimentAccess().getGroup_3(), "rule__Experiment__Group_3__0");
			builder.put(grammarAccess.getControlAccess().getGroup(), "rule__Control__Group__0");
			builder.put(grammarAccess.getExperimentTaskAccess().getGroup_0(), "rule__ExperimentTask__Group_0__0");
			builder.put(grammarAccess.getExperimentTaskAccess().getGroup_1(), "rule__ExperimentTask__Group_1__0");
			builder.put(grammarAccess.getExperimentTaskAccess().getGroup_1_3_3(), "rule__ExperimentTask__Group_1_3_3__0");
			builder.put(grammarAccess.getExperimentTaskAccess().getGroup_1_3_3_3(), "rule__ExperimentTask__Group_1_3_3_3__0");
			builder.put(grammarAccess.getExperimentTaskAccess().getGroup_1_3_4(), "rule__ExperimentTask__Group_1_3_4__0");
			builder.put(grammarAccess.getExperimentTaskAccess().getGroup_1_3_5(), "rule__ExperimentTask__Group_1_3_5__0");
			builder.put(grammarAccess.getExperimentTaskAccess().getGroup_1_3_6(), "rule__ExperimentTask__Group_1_3_6__0");
			builder.put(grammarAccess.getExperimentTaskAccess().getGroup_1_3_7(), "rule__ExperimentTask__Group_1_3_7__0");
			builder.put(grammarAccess.getInteractionAccess().getGroup(), "rule__Interaction__Group__0");
			builder.put(grammarAccess.getExperimentSpaceAccess().getGroup(), "rule__ExperimentSpace__Group__0");
			builder.put(grammarAccess.getExperimentSpaceAccess().getGroup_5_0(), "rule__ExperimentSpace__Group_5_0__0");
			builder.put(grammarAccess.getTaskConfigurationAccess().getGroup(), "rule__TaskConfiguration__Group__0");
			builder.put(grammarAccess.getTaskConfigurationAccess().getGroup_2_0(), "rule__TaskConfiguration__Group_2_0__0");
			builder.put(grammarAccess.getTaskConfigurationAccess().getGroup_2_0_1_3(), "rule__TaskConfiguration__Group_2_0_1_3__0");
			builder.put(grammarAccess.getTaskConfigurationAccess().getGroup_2_0_1_3_3(), "rule__TaskConfiguration__Group_2_0_1_3_3__0");
			builder.put(grammarAccess.getTaskConfigurationAccess().getGroup_2_0_1_4(), "rule__TaskConfiguration__Group_2_0_1_4__0");
			builder.put(grammarAccess.getTaskConfigurationAccess().getGroup_2_0_1_5(), "rule__TaskConfiguration__Group_2_0_1_5__0");
			builder.put(grammarAccess.getTaskConfigurationAccess().getGroup_2_0_1_6(), "rule__TaskConfiguration__Group_2_0_1_6__0");
			builder.put(grammarAccess.getTaskConfigurationAccess().getGroup_2_0_1_7(), "rule__TaskConfiguration__Group_2_0_1_7__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getActionAccess().getGroup_3(), "rule__Action__Group_3__0");
			builder.put(grammarAccess.getActionAccess().getGroup_3_1(), "rule__Action__Group_3_1__0");
			builder.put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
			builder.put(grammarAccess.getExperimentTaskConfiguraitonBodyAccess().getGroup(), "rule__ExperimentTaskConfiguraitonBody__Group__0");
			builder.put(grammarAccess.getExperimentTaskConfiguraitonAccess().getGroup(), "rule__ExperimentTaskConfiguraiton__Group__0");
			builder.put(grammarAccess.getRegularExpLinkAccess().getGroup(), "rule__RegularExpLink__Group__0");
			builder.put(grammarAccess.getRegularExpLinkAccess().getGroup_0(), "rule__RegularExpLink__Group_0__0");
			builder.put(grammarAccess.getRegularExpLinkAccess().getGroup_2(), "rule__RegularExpLink__Group_2__0");
			builder.put(grammarAccess.getRegularExpLinkAccess().getGroup_3(), "rule__RegularExpLink__Group_3__0");
			builder.put(grammarAccess.getParallelNodesAccess().getGroup(), "rule__ParallelNodes__Group__0");
			builder.put(grammarAccess.getParallelNodesAccess().getGroup_2(), "rule__ParallelNodes__Group_2__0");
			builder.put(grammarAccess.getConditionalExpLinkAccess().getGroup(), "rule__ConditionalExpLink__Group__0");
			builder.put(grammarAccess.getRootAccess().getAsPackageAssignment_0_0(), "rule__Root__AsPackageAssignment_0_0");
			builder.put(grammarAccess.getRootAccess().getNameAssignment_0_1(), "rule__Root__NameAssignment_0_1");
			builder.put(grammarAccess.getRootAccess().getWorkflowsAssignment_1_0(), "rule__Root__WorkflowsAssignment_1_0");
			builder.put(grammarAccess.getRootAccess().getGroupsAssignment_1_1(), "rule__Root__GroupsAssignment_1_1");
			builder.put(grammarAccess.getRootAccess().getExperimentsAssignment_1_2(), "rule__Root__ExperimentsAssignment_1_2");
			builder.put(grammarAccess.getInputDataAccess().getNameAssignment_2(), "rule__InputData__NameAssignment_2");
			builder.put(grammarAccess.getOutputDataAccess().getNameAssignment_2(), "rule__OutputData__NameAssignment_2");
			builder.put(grammarAccess.getDataConfigurationAccess().getDataAssignment_2(), "rule__DataConfiguration__DataAssignment_2");
			builder.put(grammarAccess.getDataConfigurationAccess().getPathAssignment_4_0_1(), "rule__DataConfiguration__PathAssignment_4_0_1");
			builder.put(grammarAccess.getDataConfigurationAccess().getTypeAssignment_4_1_1(), "rule__DataConfiguration__TypeAssignment_4_1_1");
			builder.put(grammarAccess.getDataConfigurationAccess().getDefaultValueAssignment_4_2_1(), "rule__DataConfiguration__DefaultValueAssignment_4_2_1");
			builder.put(grammarAccess.getDataLinkAccess().getInputDataTaskAssignment_0_0_0(), "rule__DataLink__InputDataTaskAssignment_0_0_0");
			builder.put(grammarAccess.getDataLinkAccess().getAsInputTaskAssignment_0_0_1(), "rule__DataLink__AsInputTaskAssignment_0_0_1");
			builder.put(grammarAccess.getDataLinkAccess().getInputDataAssignment_0_1(), "rule__DataLink__InputDataAssignment_0_1");
			builder.put(grammarAccess.getDataLinkAccess().getOutputDataTaskAssignment_2_0_0(), "rule__DataLink__OutputDataTaskAssignment_2_0_0");
			builder.put(grammarAccess.getDataLinkAccess().getAsOutputTaskAssignment_2_0_1(), "rule__DataLink__AsOutputTaskAssignment_2_0_1");
			builder.put(grammarAccess.getDataLinkAccess().getOutputDataAssignment_2_1(), "rule__DataLink__OutputDataAssignment_2_1");
			builder.put(grammarAccess.getCompositeWorkflowAccess().getNameAssignment_1(), "rule__CompositeWorkflow__NameAssignment_1");
			builder.put(grammarAccess.getCompositeWorkflowAccess().getInputsAssignment_3_0(), "rule__CompositeWorkflow__InputsAssignment_3_0");
			builder.put(grammarAccess.getCompositeWorkflowAccess().getOutputsAssignment_3_1(), "rule__CompositeWorkflow__OutputsAssignment_3_1");
			builder.put(grammarAccess.getCompositeWorkflowAccess().getLinksAssignment_3_2(), "rule__CompositeWorkflow__LinksAssignment_3_2");
			builder.put(grammarAccess.getCompositeWorkflowAccess().getDataLinksAssignment_3_3(), "rule__CompositeWorkflow__DataLinksAssignment_3_3");
			builder.put(grammarAccess.getCompositeWorkflowAccess().getNodesAssignment_3_4(), "rule__CompositeWorkflow__NodesAssignment_3_4");
			builder.put(grammarAccess.getCompositeWorkflowAccess().getDataConfigurationsAssignment_3_5(), "rule__CompositeWorkflow__DataConfigurationsAssignment_3_5");
			builder.put(grammarAccess.getTaskAccess().getNameAssignment_1(), "rule__Task__NameAssignment_1");
			builder.put(grammarAccess.getTaskAccess().getAbstractAssignment_2_0(), "rule__Task__AbstractAssignment_2_0");
			builder.put(grammarAccess.getTaskAccess().getConfiguredAssignment_2_1_0(), "rule__Task__ConfiguredAssignment_2_1_0");
			builder.put(grammarAccess.getTaskAccess().getInputsAssignment_2_1_1_0(), "rule__Task__InputsAssignment_2_1_1_0");
			builder.put(grammarAccess.getTaskAccess().getOutputsAssignment_2_1_1_1(), "rule__Task__OutputsAssignment_2_1_1_1");
			builder.put(grammarAccess.getTaskAccess().getParamsAssignment_2_1_1_2(), "rule__Task__ParamsAssignment_2_1_1_2");
			builder.put(grammarAccess.getTaskAccess().getMetadataAssignment_2_1_1_3_2(), "rule__Task__MetadataAssignment_2_1_1_3_2");
			builder.put(grammarAccess.getTaskAccess().getMetadataAssignment_2_1_1_3_3_1(), "rule__Task__MetadataAssignment_2_1_1_3_3_1");
			builder.put(grammarAccess.getTaskAccess().getDescriptionAssignment_2_1_1_4_1(), "rule__Task__DescriptionAssignment_2_1_1_4_1");
			builder.put(grammarAccess.getTaskAccess().getPrimitiveImplementationAssignment_2_1_1_5_1(), "rule__Task__PrimitiveImplementationAssignment_2_1_1_5_1");
			builder.put(grammarAccess.getTaskAccess().getSubworkflowAssignment_2_1_1_6_1(), "rule__Task__SubworkflowAssignment_2_1_1_6_1");
			builder.put(grammarAccess.getTaskAccess().getDependencyAssignment_2_1_1_7_1(), "rule__Task__DependencyAssignment_2_1_1_7_1");
			builder.put(grammarAccess.getMetaDataAccess().getNameAssignment_0(), "rule__MetaData__NameAssignment_0");
			builder.put(grammarAccess.getMetaDataAccess().getValueAssignment_2(), "rule__MetaData__ValueAssignment_2");
			builder.put(grammarAccess.getEventAccess().getNameAssignment(), "rule__Event__NameAssignment");
			builder.put(grammarAccess.getJoinAccess().getNameAssignment(), "rule__Join__NameAssignment");
			builder.put(grammarAccess.getParallelAccess().getNameAssignment(), "rule__Parallel__NameAssignment");
			builder.put(grammarAccess.getExclusiveAccess().getNameAssignment_0(), "rule__Exclusive__NameAssignment_0");
			builder.put(grammarAccess.getExclusiveAccess().getConditionsAssignment_2(), "rule__Exclusive__ConditionsAssignment_2");
			builder.put(grammarAccess.getInclusiveAccess().getNameAssignment_0(), "rule__Inclusive__NameAssignment_0");
			builder.put(grammarAccess.getInclusiveAccess().getConditionsAssignment_2(), "rule__Inclusive__ConditionsAssignment_2");
			builder.put(grammarAccess.getConditionAccess().getConditionAssignment_1(), "rule__Condition__ConditionAssignment_1");
			builder.put(grammarAccess.getConditionAccess().getCasesAssignment_3(), "rule__Condition__CasesAssignment_3");
			builder.put(grammarAccess.getCaseAccess().getCaseAssignment_0(), "rule__Case__CaseAssignment_0");
			builder.put(grammarAccess.getCaseAccess().getTargetAssignment_1(), "rule__Case__TargetAssignment_1");
			builder.put(grammarAccess.getNodeLinkAccess().getTaskAssignment_0(), "rule__NodeLink__TaskAssignment_0");
			builder.put(grammarAccess.getNodeLinkAccess().getEventAssignment_1(), "rule__NodeLink__EventAssignment_1");
			builder.put(grammarAccess.getConditionalLinkAccess().getInputAssignment_0(), "rule__ConditionalLink__InputAssignment_0");
			builder.put(grammarAccess.getConditionalLinkAccess().getOutputAssignment_2(), "rule__ConditionalLink__OutputAssignment_2");
			builder.put(grammarAccess.getConditionalLinkAccess().getConditionAssignment_5(), "rule__ConditionalLink__ConditionAssignment_5");
			builder.put(grammarAccess.getRegularLinkAccess().getInputAssignment_0(), "rule__RegularLink__InputAssignment_0");
			builder.put(grammarAccess.getRegularLinkAccess().getOuputAssignment_2(), "rule__RegularLink__OuputAssignment_2");
			builder.put(grammarAccess.getRegularLinksAccess().getInputAssignment_0(), "rule__RegularLinks__InputAssignment_0");
			builder.put(grammarAccess.getRegularLinksAccess().getLinksAssignment_1_1(), "rule__RegularLinks__LinksAssignment_1_1");
			builder.put(grammarAccess.getRegularLinksAccess().getOutputAssignment_3(), "rule__RegularLinks__OutputAssignment_3");
			builder.put(grammarAccess.getExceptionalLinkAccess().getInputAssignment_0(), "rule__ExceptionalLink__InputAssignment_0");
			builder.put(grammarAccess.getExceptionalLinkAccess().getOutputAssignment_2(), "rule__ExceptionalLink__OutputAssignment_2");
			builder.put(grammarAccess.getExceptionalLinkAccess().getEventAssignment_5(), "rule__ExceptionalLink__EventAssignment_5");
			builder.put(grammarAccess.getGroupAccess().getNameAssignment_1(), "rule__Group__NameAssignment_1");
			builder.put(grammarAccess.getGroupAccess().getTasksAssignment_3_0(), "rule__Group__TasksAssignment_3_0");
			builder.put(grammarAccess.getGroupAccess().getTasksAssignment_3_1_1(), "rule__Group__TasksAssignment_3_1_1");
			builder.put(grammarAccess.getAssembledWorkflowAccess().getNameAssignment_1(), "rule__AssembledWorkflow__NameAssignment_1");
			builder.put(grammarAccess.getAssembledWorkflowAccess().getParentAssignment_3(), "rule__AssembledWorkflow__ParentAssignment_3");
			builder.put(grammarAccess.getAssembledWorkflowAccess().getInputsAssignment_5_0(), "rule__AssembledWorkflow__InputsAssignment_5_0");
			builder.put(grammarAccess.getAssembledWorkflowAccess().getOutputsAssignment_5_1(), "rule__AssembledWorkflow__OutputsAssignment_5_1");
			builder.put(grammarAccess.getAssembledWorkflowAccess().getSubstitutedTasksAssignment_5_2(), "rule__AssembledWorkflow__SubstitutedTasksAssignment_5_2");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getNameAssignment_1(), "rule__SubstitutedTask__NameAssignment_1");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getInputsAssignment_3_0(), "rule__SubstitutedTask__InputsAssignment_3_0");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getOutputsAssignment_3_1(), "rule__SubstitutedTask__OutputsAssignment_3_1");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getParamsAssignment_3_2(), "rule__SubstitutedTask__ParamsAssignment_3_2");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getMetadataAssignment_3_3_2(), "rule__SubstitutedTask__MetadataAssignment_3_3_2");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getMetadataAssignment_3_3_3_1(), "rule__SubstitutedTask__MetadataAssignment_3_3_3_1");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getDescriptionAssignment_3_4_1(), "rule__SubstitutedTask__DescriptionAssignment_3_4_1");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getPrimitiveImplementationAssignment_3_5_1(), "rule__SubstitutedTask__PrimitiveImplementationAssignment_3_5_1");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getSubworkflowAssignment_3_6_1(), "rule__SubstitutedTask__SubworkflowAssignment_3_6_1");
			builder.put(grammarAccess.getSubstitutedTaskAccess().getDependencyAssignment_3_7_1(), "rule__SubstitutedTask__DependencyAssignment_3_7_1");
			builder.put(grammarAccess.getTaskSpecificationAccess().getNameAssignment_1(), "rule__TaskSpecification__NameAssignment_1");
			builder.put(grammarAccess.getTaskSpecificationAccess().getInputsAssignment_3_0(), "rule__TaskSpecification__InputsAssignment_3_0");
			builder.put(grammarAccess.getTaskSpecificationAccess().getOutputsAssignment_3_1(), "rule__TaskSpecification__OutputsAssignment_3_1");
			builder.put(grammarAccess.getTaskSpecificationAccess().getMetricsAssignment_3_2(), "rule__TaskSpecification__MetricsAssignment_3_2");
			builder.put(grammarAccess.getTaskSpecificationAccess().getParametersAssignment_3_3(), "rule__TaskSpecification__ParametersAssignment_3_3");
			builder.put(grammarAccess.getTaskSpecificationAccess().getImplementationAssignment_3_4_1(), "rule__TaskSpecification__ImplementationAssignment_3_4_1");
			builder.put(grammarAccess.getTaskSpecificationAccess().getDependenciesAssignment_3_5(), "rule__TaskSpecification__DependenciesAssignment_3_5");
			builder.put(grammarAccess.getDependencyAccess().getNameAssignment_1(), "rule__Dependency__NameAssignment_1");
			builder.put(grammarAccess.getDependencyAccess().getValueAssignment_2(), "rule__Dependency__ValueAssignment_2");
			builder.put(grammarAccess.getParameterAccess().getNameAssignment_1(), "rule__Parameter__NameAssignment_1");
			builder.put(grammarAccess.getParameterAccess().getTypeAssignment_3_0_1(), "rule__Parameter__TypeAssignment_3_0_1");
			builder.put(grammarAccess.getParameterAccess().getDefaultValueStringAssignment_3_1_1_0(), "rule__Parameter__DefaultValueStringAssignment_3_1_1_0");
			builder.put(grammarAccess.getParameterAccess().getDefaultValueIntAssignment_3_1_1_1(), "rule__Parameter__DefaultValueIntAssignment_3_1_1_1");
			builder.put(grammarAccess.getParameterAccess().getRangeValueAssignment_3_2_0_0(), "rule__Parameter__RangeValueAssignment_3_2_0_0");
			builder.put(grammarAccess.getParameterAccess().getEnumValueAssignment_3_2_0_1(), "rule__Parameter__EnumValueAssignment_3_2_0_1");
			builder.put(grammarAccess.getParameterAccess().getValueConstraintAssignment_3_3_1(), "rule__Parameter__ValueConstraintAssignment_3_3_1");
			builder.put(grammarAccess.getParamAccess().getNameAssignment_1(), "rule__Param__NameAssignment_1");
			builder.put(grammarAccess.getParamAccess().getAssignedAssignment_2_0(), "rule__Param__AssignedAssignment_2_0");
			builder.put(grammarAccess.getParamAccess().getValueAssignment_2_1_0(), "rule__Param__ValueAssignment_2_1_0");
			builder.put(grammarAccess.getParamAccess().getRefAssignment_2_1_1(), "rule__Param__RefAssignment_2_1_1");
			builder.put(grammarAccess.getParamValueAccess().getRangeValueAssignment_0(), "rule__ParamValue__RangeValueAssignment_0");
			builder.put(grammarAccess.getParamValueAccess().getEnumValueAssignment_1(), "rule__ParamValue__EnumValueAssignment_1");
			builder.put(grammarAccess.getParamValueAccess().getPrimitiveValueAssignment_2(), "rule__ParamValue__PrimitiveValueAssignment_2");
			builder.put(grammarAccess.getParamValueAccess().getListValueAssignment_3(), "rule__ParamValue__ListValueAssignment_3");
			builder.put(grammarAccess.getParamValueRangeAccess().getStartAssignment_2(), "rule__ParamValueRange__StartAssignment_2");
			builder.put(grammarAccess.getParamValueRangeAccess().getEndAssignment_4(), "rule__ParamValueRange__EndAssignment_4");
			builder.put(grammarAccess.getParamValueRangeAccess().getStepAssignment_5_1(), "rule__ParamValueRange__StepAssignment_5_1");
			builder.put(grammarAccess.getParamValueEnumAccess().getValuesAssignment_2(), "rule__ParamValueEnum__ValuesAssignment_2");
			builder.put(grammarAccess.getParamValueEnumAccess().getValuesAssignment_3_1(), "rule__ParamValueEnum__ValuesAssignment_3_1");
			builder.put(grammarAccess.getParamValueListAccess().getValuesAssignment_1(), "rule__ParamValueList__ValuesAssignment_1");
			builder.put(grammarAccess.getParamValueListAccess().getValuesAssignment_2_1(), "rule__ParamValueList__ValuesAssignment_2_1");
			builder.put(grammarAccess.getStructureAccess().getNameAssignment_1(), "rule__Structure__NameAssignment_1");
			builder.put(grammarAccess.getStructureAccess().getFieldsAssignment_3(), "rule__Structure__FieldsAssignment_3");
			builder.put(grammarAccess.getFieldAccess().getNameAssignment_0(), "rule__Field__NameAssignment_0");
			builder.put(grammarAccess.getFieldAccess().getTypeAssignment_1_1(), "rule__Field__TypeAssignment_1_1");
			builder.put(grammarAccess.getArrayAccess().getNameAssignment_0(), "rule__Array__NameAssignment_0");
			builder.put(grammarAccess.getArrayAccess().getLengthAssignment_2(), "rule__Array__LengthAssignment_2");
			builder.put(grammarAccess.getArrayAccess().getTypeAssignment_4_1(), "rule__Array__TypeAssignment_4_1");
			builder.put(grammarAccess.getMetricAccess().getNameAssignment_1(), "rule__Metric__NameAssignment_1");
			builder.put(grammarAccess.getMetricAccess().getTypeAssignment_3_0_1(), "rule__Metric__TypeAssignment_3_0_1");
			builder.put(grammarAccess.getMetricAccess().getKindAssignment_3_1_1(), "rule__Metric__KindAssignment_3_1_1");
			builder.put(grammarAccess.getExperimentAccess().getNameAssignment_1(), "rule__Experiment__NameAssignment_1");
			builder.put(grammarAccess.getExperimentAccess().getIntentAssignment_3_1(), "rule__Experiment__IntentAssignment_3_1");
			builder.put(grammarAccess.getExperimentAccess().getStepsAssignment_4_0(), "rule__Experiment__StepsAssignment_4_0");
			builder.put(grammarAccess.getExperimentAccess().getControlAssignment_4_1(), "rule__Experiment__ControlAssignment_4_1");
			builder.put(grammarAccess.getControlAccess().getFlowsAssignment_3_0(), "rule__Control__FlowsAssignment_3_0");
			builder.put(grammarAccess.getControlAccess().getNotImplementedAssignment_3_1(), "rule__Control__NotImplementedAssignment_3_1");
			builder.put(grammarAccess.getExperimentTaskAccess().getNameAssignment_0_1(), "rule__ExperimentTask__NameAssignment_0_1");
			builder.put(grammarAccess.getExperimentTaskAccess().getAbstractAssignment_0_2(), "rule__ExperimentTask__AbstractAssignment_0_2");
			builder.put(grammarAccess.getExperimentTaskAccess().getNameAssignment_1_1(), "rule__ExperimentTask__NameAssignment_1_1");
			builder.put(grammarAccess.getExperimentTaskAccess().getConfiguredAssignment_1_2(), "rule__ExperimentTask__ConfiguredAssignment_1_2");
			builder.put(grammarAccess.getExperimentTaskAccess().getInputsAssignment_1_3_0(), "rule__ExperimentTask__InputsAssignment_1_3_0");
			builder.put(grammarAccess.getExperimentTaskAccess().getOutputsAssignment_1_3_1(), "rule__ExperimentTask__OutputsAssignment_1_3_1");
			builder.put(grammarAccess.getExperimentTaskAccess().getParamsAssignment_1_3_2(), "rule__ExperimentTask__ParamsAssignment_1_3_2");
			builder.put(grammarAccess.getExperimentTaskAccess().getMetadataAssignment_1_3_3_2(), "rule__ExperimentTask__MetadataAssignment_1_3_3_2");
			builder.put(grammarAccess.getExperimentTaskAccess().getMetadataAssignment_1_3_3_3_1(), "rule__ExperimentTask__MetadataAssignment_1_3_3_3_1");
			builder.put(grammarAccess.getExperimentTaskAccess().getDescriptionAssignment_1_3_4_1(), "rule__ExperimentTask__DescriptionAssignment_1_3_4_1");
			builder.put(grammarAccess.getExperimentTaskAccess().getPrimitiveImplementationAssignment_1_3_5_1(), "rule__ExperimentTask__PrimitiveImplementationAssignment_1_3_5_1");
			builder.put(grammarAccess.getExperimentTaskAccess().getSubworkflowAssignment_1_3_6_1(), "rule__ExperimentTask__SubworkflowAssignment_1_3_6_1");
			builder.put(grammarAccess.getExperimentTaskAccess().getDependencyAssignment_1_3_7_1(), "rule__ExperimentTask__DependencyAssignment_1_3_7_1");
			builder.put(grammarAccess.getInteractionAccess().getNameAssignment_1(), "rule__Interaction__NameAssignment_1");
			builder.put(grammarAccess.getExperimentSpaceAccess().getNameAssignment_1(), "rule__ExperimentSpace__NameAssignment_1");
			builder.put(grammarAccess.getExperimentSpaceAccess().getAssembledWorkflowAssignment_3(), "rule__ExperimentSpace__AssembledWorkflowAssignment_3");
			builder.put(grammarAccess.getExperimentSpaceAccess().getStrategyAssignment_5_0_1(), "rule__ExperimentSpace__StrategyAssignment_5_0_1");
			builder.put(grammarAccess.getExperimentSpaceAccess().getParamsAssignment_5_1(), "rule__ExperimentSpace__ParamsAssignment_5_1");
			builder.put(grammarAccess.getExperimentSpaceAccess().getActionsAssignment_5_2(), "rule__ExperimentSpace__ActionsAssignment_5_2");
			builder.put(grammarAccess.getExperimentSpaceAccess().getAttributesAssignment_5_3(), "rule__ExperimentSpace__AttributesAssignment_5_3");
			builder.put(grammarAccess.getExperimentSpaceAccess().getTaskConfigurationsAssignment_5_4(), "rule__ExperimentSpace__TaskConfigurationsAssignment_5_4");
			builder.put(grammarAccess.getTaskConfigurationAccess().getTaskAssignment_1(), "rule__TaskConfiguration__TaskAssignment_1");
			builder.put(grammarAccess.getTaskConfigurationAccess().getConfiguredAssignment_2_0_0(), "rule__TaskConfiguration__ConfiguredAssignment_2_0_0");
			builder.put(grammarAccess.getTaskConfigurationAccess().getInputsAssignment_2_0_1_0(), "rule__TaskConfiguration__InputsAssignment_2_0_1_0");
			builder.put(grammarAccess.getTaskConfigurationAccess().getOutputsAssignment_2_0_1_1(), "rule__TaskConfiguration__OutputsAssignment_2_0_1_1");
			builder.put(grammarAccess.getTaskConfigurationAccess().getParamsAssignment_2_0_1_2(), "rule__TaskConfiguration__ParamsAssignment_2_0_1_2");
			builder.put(grammarAccess.getTaskConfigurationAccess().getMetadataAssignment_2_0_1_3_2(), "rule__TaskConfiguration__MetadataAssignment_2_0_1_3_2");
			builder.put(grammarAccess.getTaskConfigurationAccess().getMetadataAssignment_2_0_1_3_3_1(), "rule__TaskConfiguration__MetadataAssignment_2_0_1_3_3_1");
			builder.put(grammarAccess.getTaskConfigurationAccess().getDescriptionAssignment_2_0_1_4_1(), "rule__TaskConfiguration__DescriptionAssignment_2_0_1_4_1");
			builder.put(grammarAccess.getTaskConfigurationAccess().getPrimitiveImplementationAssignment_2_0_1_5_1(), "rule__TaskConfiguration__PrimitiveImplementationAssignment_2_0_1_5_1");
			builder.put(grammarAccess.getTaskConfigurationAccess().getSubworkflowAssignment_2_0_1_6_1(), "rule__TaskConfiguration__SubworkflowAssignment_2_0_1_6_1");
			builder.put(grammarAccess.getTaskConfigurationAccess().getDependencyAssignment_2_0_1_7_1(), "rule__TaskConfiguration__DependencyAssignment_2_0_1_7_1");
			builder.put(grammarAccess.getTaskConfigurationAccess().getAbstracAssignment_2_1(), "rule__TaskConfiguration__AbstracAssignment_2_1");
			builder.put(grammarAccess.getActionArgumentAccess().getStringAssignment_0(), "rule__ActionArgument__StringAssignment_0");
			builder.put(grammarAccess.getActionArgumentAccess().getIdAssignment_1(), "rule__ActionArgument__IdAssignment_1");
			builder.put(grammarAccess.getActionAccess().getActionNameAssignment_1(), "rule__Action__ActionNameAssignment_1");
			builder.put(grammarAccess.getActionAccess().getArgumentsAssignment_3_0(), "rule__Action__ArgumentsAssignment_3_0");
			builder.put(grammarAccess.getActionAccess().getArgumentsAssignment_3_1_1(), "rule__Action__ArgumentsAssignment_3_1_1");
			builder.put(grammarAccess.getAttributeAccess().getNameAssignment_0(), "rule__Attribute__NameAssignment_0");
			builder.put(grammarAccess.getAttributeAccess().getAttributeValueAssignment_2(), "rule__Attribute__AttributeValueAssignment_2");
			builder.put(grammarAccess.getExperimentTaskConfiguraitonBodyAccess().getParamsAssignment_2_0(), "rule__ExperimentTaskConfiguraitonBody__ParamsAssignment_2_0");
			builder.put(grammarAccess.getExperimentTaskConfiguraitonBodyAccess().getNotImplementedAssignment_2_1(), "rule__ExperimentTaskConfiguraitonBody__NotImplementedAssignment_2_1");
			builder.put(grammarAccess.getExperimentTaskConfiguraitonAccess().getTaskAssignment_1(), "rule__ExperimentTaskConfiguraiton__TaskAssignment_1");
			builder.put(grammarAccess.getExperimentTaskConfiguraitonAccess().getTaskConfigurationAssignment_2(), "rule__ExperimentTaskConfiguraiton__TaskConfigurationAssignment_2");
			builder.put(grammarAccess.getRegularExpLinkAccess().getStartedAssignment_0_0(), "rule__RegularExpLink__StartedAssignment_0_0");
			builder.put(grammarAccess.getRegularExpLinkAccess().getNodesAssignment_1_0(), "rule__RegularExpLink__NodesAssignment_1_0");
			builder.put(grammarAccess.getRegularExpLinkAccess().getParallelNodesAssignment_1_1(), "rule__RegularExpLink__ParallelNodesAssignment_1_1");
			builder.put(grammarAccess.getRegularExpLinkAccess().getNodesAssignment_2_1_0(), "rule__RegularExpLink__NodesAssignment_2_1_0");
			builder.put(grammarAccess.getRegularExpLinkAccess().getParallelNodesAssignment_2_1_1(), "rule__RegularExpLink__ParallelNodesAssignment_2_1_1");
			builder.put(grammarAccess.getRegularExpLinkAccess().getEndedAssignment_3_0(), "rule__RegularExpLink__EndedAssignment_3_0");
			builder.put(grammarAccess.getParallelNodesAccess().getNodesAssignment_1(), "rule__ParallelNodes__NodesAssignment_1");
			builder.put(grammarAccess.getParallelNodesAccess().getNodesAssignment_2_1(), "rule__ParallelNodes__NodesAssignment_2_1");
			builder.put(grammarAccess.getConditionalExpLinkAccess().getFromNodeAssignment_0(), "rule__ConditionalExpLink__FromNodeAssignment_0");
			builder.put(grammarAccess.getConditionalExpLinkAccess().getToNodeAssignment_2(), "rule__ConditionalExpLink__ToNodeAssignment_2");
			builder.put(grammarAccess.getConditionalExpLinkAccess().getConditionAssignment_5(), "rule__ConditionalExpLink__ConditionAssignment_5");
			builder.put(grammarAccess.getDataConfigurationAccess().getUnorderedGroup_4(), "rule__DataConfiguration__UnorderedGroup_4");
			builder.put(grammarAccess.getParameterAccess().getUnorderedGroup_3(), "rule__Parameter__UnorderedGroup_3");
			builder.put(grammarAccess.getMetricAccess().getUnorderedGroup_3(), "rule__Metric__UnorderedGroup_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private XDSLGrammarAccess grammarAccess;

	@Override
	protected InternalXDSLParser createParser() {
		InternalXDSLParser result = new InternalXDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public XDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(XDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
