/**
 * generated by Xtext 2.39.0-SNAPSHOT
 */
package com.mesev.dsl.xDSL.impl;

import com.mesev.dsl.xDSL.ComponentWithData;
import com.mesev.dsl.xDSL.Data;
import com.mesev.dsl.xDSL.DataConnection;
import com.mesev.dsl.xDSL.XDSLPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Data Connection</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.mesev.dsl.xDSL.impl.DataConnectionImpl#getComponent <em>Component</em>}</li>
 *   <li>{@link com.mesev.dsl.xDSL.impl.DataConnectionImpl#isFromComponent <em>From Component</em>}</li>
 *   <li>{@link com.mesev.dsl.xDSL.impl.DataConnectionImpl#getRef <em>Ref</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DataConnectionImpl extends MinimalEObjectImpl.Container implements DataConnection
{
  /**
   * The cached value of the '{@link #getComponent() <em>Component</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponent()
   * @generated
   * @ordered
   */
  protected ComponentWithData component;

  /**
   * The default value of the '{@link #isFromComponent() <em>From Component</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFromComponent()
   * @generated
   * @ordered
   */
  protected static final boolean FROM_COMPONENT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFromComponent() <em>From Component</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFromComponent()
   * @generated
   * @ordered
   */
  protected boolean fromComponent = FROM_COMPONENT_EDEFAULT;

  /**
   * The cached value of the '{@link #getRef() <em>Ref</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRef()
   * @generated
   * @ordered
   */
  protected Data ref;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DataConnectionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XDSLPackage.Literals.DATA_CONNECTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComponentWithData getComponent()
  {
    if (component != null && component.eIsProxy())
    {
      InternalEObject oldComponent = (InternalEObject)component;
      component = (ComponentWithData)eResolveProxy(oldComponent);
      if (component != oldComponent)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, XDSLPackage.DATA_CONNECTION__COMPONENT, oldComponent, component));
      }
    }
    return component;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentWithData basicGetComponent()
  {
    return component;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setComponent(ComponentWithData newComponent)
  {
    ComponentWithData oldComponent = component;
    component = newComponent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XDSLPackage.DATA_CONNECTION__COMPONENT, oldComponent, component));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isFromComponent()
  {
    return fromComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFromComponent(boolean newFromComponent)
  {
    boolean oldFromComponent = fromComponent;
    fromComponent = newFromComponent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XDSLPackage.DATA_CONNECTION__FROM_COMPONENT, oldFromComponent, fromComponent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Data getRef()
  {
    if (ref != null && ref.eIsProxy())
    {
      InternalEObject oldRef = (InternalEObject)ref;
      ref = (Data)eResolveProxy(oldRef);
      if (ref != oldRef)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, XDSLPackage.DATA_CONNECTION__REF, oldRef, ref));
      }
    }
    return ref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Data basicGetRef()
  {
    return ref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRef(Data newRef)
  {
    Data oldRef = ref;
    ref = newRef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XDSLPackage.DATA_CONNECTION__REF, oldRef, ref));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XDSLPackage.DATA_CONNECTION__COMPONENT:
        if (resolve) return getComponent();
        return basicGetComponent();
      case XDSLPackage.DATA_CONNECTION__FROM_COMPONENT:
        return isFromComponent();
      case XDSLPackage.DATA_CONNECTION__REF:
        if (resolve) return getRef();
        return basicGetRef();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XDSLPackage.DATA_CONNECTION__COMPONENT:
        setComponent((ComponentWithData)newValue);
        return;
      case XDSLPackage.DATA_CONNECTION__FROM_COMPONENT:
        setFromComponent((Boolean)newValue);
        return;
      case XDSLPackage.DATA_CONNECTION__REF:
        setRef((Data)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XDSLPackage.DATA_CONNECTION__COMPONENT:
        setComponent((ComponentWithData)null);
        return;
      case XDSLPackage.DATA_CONNECTION__FROM_COMPONENT:
        setFromComponent(FROM_COMPONENT_EDEFAULT);
        return;
      case XDSLPackage.DATA_CONNECTION__REF:
        setRef((Data)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XDSLPackage.DATA_CONNECTION__COMPONENT:
        return component != null;
      case XDSLPackage.DATA_CONNECTION__FROM_COMPONENT:
        return fromComponent != FROM_COMPONENT_EDEFAULT;
      case XDSLPackage.DATA_CONNECTION__REF:
        return ref != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (fromComponent: ");
    result.append(fromComponent);
    result.append(')');
    return result.toString();
  }

} //DataConnectionImpl
