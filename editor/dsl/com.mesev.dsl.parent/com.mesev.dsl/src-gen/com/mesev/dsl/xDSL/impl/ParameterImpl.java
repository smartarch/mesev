/**
 * generated by Xtext 2.39.0-SNAPSHOT
 */
package com.mesev.dsl.xDSL.impl;

import com.mesev.dsl.xDSL.ParamValueEnum;
import com.mesev.dsl.xDSL.ParamValueRange;
import com.mesev.dsl.xDSL.Parameter;
import com.mesev.dsl.xDSL.ParameterType;
import com.mesev.dsl.xDSL.XDSLPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Parameter</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.mesev.dsl.xDSL.impl.ParameterImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.mesev.dsl.xDSL.impl.ParameterImpl#getType <em>Type</em>}</li>
 *   <li>{@link com.mesev.dsl.xDSL.impl.ParameterImpl#getDefaultValueString <em>Default Value String</em>}</li>
 *   <li>{@link com.mesev.dsl.xDSL.impl.ParameterImpl#getDefaultValueInt <em>Default Value Int</em>}</li>
 *   <li>{@link com.mesev.dsl.xDSL.impl.ParameterImpl#getRangeValue <em>Range Value</em>}</li>
 *   <li>{@link com.mesev.dsl.xDSL.impl.ParameterImpl#getEnumValue <em>Enum Value</em>}</li>
 *   <li>{@link com.mesev.dsl.xDSL.impl.ParameterImpl#getValueConstraint <em>Value Constraint</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParameterImpl extends MinimalEObjectImpl.Container implements Parameter
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected ParameterType type;

  /**
   * The default value of the '{@link #getDefaultValueString() <em>Default Value String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefaultValueString()
   * @generated
   * @ordered
   */
  protected static final String DEFAULT_VALUE_STRING_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDefaultValueString() <em>Default Value String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefaultValueString()
   * @generated
   * @ordered
   */
  protected String defaultValueString = DEFAULT_VALUE_STRING_EDEFAULT;

  /**
   * The default value of the '{@link #getDefaultValueInt() <em>Default Value Int</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefaultValueInt()
   * @generated
   * @ordered
   */
  protected static final int DEFAULT_VALUE_INT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getDefaultValueInt() <em>Default Value Int</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefaultValueInt()
   * @generated
   * @ordered
   */
  protected int defaultValueInt = DEFAULT_VALUE_INT_EDEFAULT;

  /**
   * The cached value of the '{@link #getRangeValue() <em>Range Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRangeValue()
   * @generated
   * @ordered
   */
  protected ParamValueRange rangeValue;

  /**
   * The cached value of the '{@link #getEnumValue() <em>Enum Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumValue()
   * @generated
   * @ordered
   */
  protected ParamValueEnum enumValue;

  /**
   * The default value of the '{@link #getValueConstraint() <em>Value Constraint</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValueConstraint()
   * @generated
   * @ordered
   */
  protected static final String VALUE_CONSTRAINT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValueConstraint() <em>Value Constraint</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValueConstraint()
   * @generated
   * @ordered
   */
  protected String valueConstraint = VALUE_CONSTRAINT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParameterImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XDSLPackage.Literals.PARAMETER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XDSLPackage.PARAMETER__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParameterType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetType(ParameterType newType, NotificationChain msgs)
  {
    ParameterType oldType = type;
    type = newType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XDSLPackage.PARAMETER__TYPE, oldType, newType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(ParameterType newType)
  {
    if (newType != type)
    {
      NotificationChain msgs = null;
      if (type != null)
        msgs = ((InternalEObject)type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XDSLPackage.PARAMETER__TYPE, null, msgs);
      if (newType != null)
        msgs = ((InternalEObject)newType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XDSLPackage.PARAMETER__TYPE, null, msgs);
      msgs = basicSetType(newType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XDSLPackage.PARAMETER__TYPE, newType, newType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDefaultValueString()
  {
    return defaultValueString;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefaultValueString(String newDefaultValueString)
  {
    String oldDefaultValueString = defaultValueString;
    defaultValueString = newDefaultValueString;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XDSLPackage.PARAMETER__DEFAULT_VALUE_STRING, oldDefaultValueString, defaultValueString));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getDefaultValueInt()
  {
    return defaultValueInt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefaultValueInt(int newDefaultValueInt)
  {
    int oldDefaultValueInt = defaultValueInt;
    defaultValueInt = newDefaultValueInt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XDSLPackage.PARAMETER__DEFAULT_VALUE_INT, oldDefaultValueInt, defaultValueInt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParamValueRange getRangeValue()
  {
    return rangeValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRangeValue(ParamValueRange newRangeValue, NotificationChain msgs)
  {
    ParamValueRange oldRangeValue = rangeValue;
    rangeValue = newRangeValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XDSLPackage.PARAMETER__RANGE_VALUE, oldRangeValue, newRangeValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRangeValue(ParamValueRange newRangeValue)
  {
    if (newRangeValue != rangeValue)
    {
      NotificationChain msgs = null;
      if (rangeValue != null)
        msgs = ((InternalEObject)rangeValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XDSLPackage.PARAMETER__RANGE_VALUE, null, msgs);
      if (newRangeValue != null)
        msgs = ((InternalEObject)newRangeValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XDSLPackage.PARAMETER__RANGE_VALUE, null, msgs);
      msgs = basicSetRangeValue(newRangeValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XDSLPackage.PARAMETER__RANGE_VALUE, newRangeValue, newRangeValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParamValueEnum getEnumValue()
  {
    return enumValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnumValue(ParamValueEnum newEnumValue, NotificationChain msgs)
  {
    ParamValueEnum oldEnumValue = enumValue;
    enumValue = newEnumValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XDSLPackage.PARAMETER__ENUM_VALUE, oldEnumValue, newEnumValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnumValue(ParamValueEnum newEnumValue)
  {
    if (newEnumValue != enumValue)
    {
      NotificationChain msgs = null;
      if (enumValue != null)
        msgs = ((InternalEObject)enumValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XDSLPackage.PARAMETER__ENUM_VALUE, null, msgs);
      if (newEnumValue != null)
        msgs = ((InternalEObject)newEnumValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XDSLPackage.PARAMETER__ENUM_VALUE, null, msgs);
      msgs = basicSetEnumValue(newEnumValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XDSLPackage.PARAMETER__ENUM_VALUE, newEnumValue, newEnumValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getValueConstraint()
  {
    return valueConstraint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setValueConstraint(String newValueConstraint)
  {
    String oldValueConstraint = valueConstraint;
    valueConstraint = newValueConstraint;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XDSLPackage.PARAMETER__VALUE_CONSTRAINT, oldValueConstraint, valueConstraint));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case XDSLPackage.PARAMETER__TYPE:
        return basicSetType(null, msgs);
      case XDSLPackage.PARAMETER__RANGE_VALUE:
        return basicSetRangeValue(null, msgs);
      case XDSLPackage.PARAMETER__ENUM_VALUE:
        return basicSetEnumValue(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XDSLPackage.PARAMETER__NAME:
        return getName();
      case XDSLPackage.PARAMETER__TYPE:
        return getType();
      case XDSLPackage.PARAMETER__DEFAULT_VALUE_STRING:
        return getDefaultValueString();
      case XDSLPackage.PARAMETER__DEFAULT_VALUE_INT:
        return getDefaultValueInt();
      case XDSLPackage.PARAMETER__RANGE_VALUE:
        return getRangeValue();
      case XDSLPackage.PARAMETER__ENUM_VALUE:
        return getEnumValue();
      case XDSLPackage.PARAMETER__VALUE_CONSTRAINT:
        return getValueConstraint();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XDSLPackage.PARAMETER__NAME:
        setName((String)newValue);
        return;
      case XDSLPackage.PARAMETER__TYPE:
        setType((ParameterType)newValue);
        return;
      case XDSLPackage.PARAMETER__DEFAULT_VALUE_STRING:
        setDefaultValueString((String)newValue);
        return;
      case XDSLPackage.PARAMETER__DEFAULT_VALUE_INT:
        setDefaultValueInt((Integer)newValue);
        return;
      case XDSLPackage.PARAMETER__RANGE_VALUE:
        setRangeValue((ParamValueRange)newValue);
        return;
      case XDSLPackage.PARAMETER__ENUM_VALUE:
        setEnumValue((ParamValueEnum)newValue);
        return;
      case XDSLPackage.PARAMETER__VALUE_CONSTRAINT:
        setValueConstraint((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XDSLPackage.PARAMETER__NAME:
        setName(NAME_EDEFAULT);
        return;
      case XDSLPackage.PARAMETER__TYPE:
        setType((ParameterType)null);
        return;
      case XDSLPackage.PARAMETER__DEFAULT_VALUE_STRING:
        setDefaultValueString(DEFAULT_VALUE_STRING_EDEFAULT);
        return;
      case XDSLPackage.PARAMETER__DEFAULT_VALUE_INT:
        setDefaultValueInt(DEFAULT_VALUE_INT_EDEFAULT);
        return;
      case XDSLPackage.PARAMETER__RANGE_VALUE:
        setRangeValue((ParamValueRange)null);
        return;
      case XDSLPackage.PARAMETER__ENUM_VALUE:
        setEnumValue((ParamValueEnum)null);
        return;
      case XDSLPackage.PARAMETER__VALUE_CONSTRAINT:
        setValueConstraint(VALUE_CONSTRAINT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XDSLPackage.PARAMETER__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case XDSLPackage.PARAMETER__TYPE:
        return type != null;
      case XDSLPackage.PARAMETER__DEFAULT_VALUE_STRING:
        return DEFAULT_VALUE_STRING_EDEFAULT == null ? defaultValueString != null : !DEFAULT_VALUE_STRING_EDEFAULT.equals(defaultValueString);
      case XDSLPackage.PARAMETER__DEFAULT_VALUE_INT:
        return defaultValueInt != DEFAULT_VALUE_INT_EDEFAULT;
      case XDSLPackage.PARAMETER__RANGE_VALUE:
        return rangeValue != null;
      case XDSLPackage.PARAMETER__ENUM_VALUE:
        return enumValue != null;
      case XDSLPackage.PARAMETER__VALUE_CONSTRAINT:
        return VALUE_CONSTRAINT_EDEFAULT == null ? valueConstraint != null : !VALUE_CONSTRAINT_EDEFAULT.equals(valueConstraint);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", defaultValueString: ");
    result.append(defaultValueString);
    result.append(", defaultValueInt: ");
    result.append(defaultValueInt);
    result.append(", valueConstraint: ");
    result.append(valueConstraint);
    result.append(')');
    return result.toString();
  }

} //ParameterImpl
